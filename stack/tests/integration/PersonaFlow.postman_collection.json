{
	"info": {
		"_postman_id": "711b1f9f-6bcb-4650-b362-c7bdcc0e74eb",
		"name": "PersonaFlow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16936331",
		"_collection_link": "https://winter-resonance-224282.postman.co/workspace/PersonaFlow~5a05c830-9309-4e81-bbbb-50425c42988f/collection/16936331-711b1f9f-6bcb-4650-b362-c7bdcc0e74eb?action=share&source=collection_link&creator=16936331"
	},
	"item": [
		{
			"name": "api/v1",
			"item": [
				{
					"name": "runs",
					"item": [
						{
							"name": "Create a run",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"assistant_id\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"config\": {\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"run_name\": \"<string>\",\n    \"max_concurrency\": \"<integer>\",\n    \"recursion_limit\": \"<integer>\",\n    \"configurable\": \"<object>\",\n    \"run_id\": \"<uuid>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/runs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"runs"
									]
								},
								"description": "Create a run to be processed by the LLM."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<string>\",\n  \"input\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"assistant_id\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"config\": {\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"run_name\": \"<string>\",\n    \"max_concurrency\": \"<integer>\",\n    \"recursion_limit\": \"<integer>\",\n    \"configurable\": \"<object>\",\n    \"run_id\": \"<uuid>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<string>\",\n  \"input\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"assistant_id\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"config\": {\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"run_name\": \"<string>\",\n    \"max_concurrency\": \"<integer>\",\n    \"recursion_limit\": \"<integer>\",\n    \"configurable\": \"<object>\",\n    \"run_id\": \"<uuid>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Stream an LLM run.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"assistant_id\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"config\": {\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"run_name\": \"<string>\",\n    \"max_concurrency\": \"<integer>\",\n    \"recursion_limit\": \"<integer>\",\n    \"configurable\": \"<object>\",\n    \"run_id\": \"<uuid>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/runs/stream",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"runs",
										"stream"
									]
								},
								"description": "Endpoint to stream an LLM response. If the thread_id is not provided, a new thread will be created as long as the assistant_id is included. <br>\n                Note that the input should be a list of messages in the format: <br>\n                content: string <br>\n                role: string <br>\n                additional_kwargs: dict <br>\n                example: bool <br>"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<string>\",\n  \"input\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"assistant_id\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"config\": {\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"run_name\": \"<string>\",\n    \"max_concurrency\": \"<integer>\",\n    \"recursion_limit\": \"<integer>\",\n    \"configurable\": \"<object>\",\n    \"run_id\": \"<uuid>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs/stream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs",
												"stream"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"<string>\",\n  \"input\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"assistant_id\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"config\": {\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"run_name\": \"<string>\",\n    \"max_concurrency\": \"<integer>\",\n    \"recursion_limit\": \"<integer>\",\n    \"configurable\": \"<object>\",\n    \"run_id\": \"<uuid>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs/stream",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs",
												"stream"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Return the input schema of the runnable.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/runs/input_schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"runs",
										"input_schema"
									]
								},
								"description": "Return the input schema of the runnable."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs/input_schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs",
												"input_schema"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						},
						{
							"name": "Return the output schema of the runnable.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/runs/output_schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"runs",
										"output_schema"
									]
								},
								"description": "Return the output schema of the runnable."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs/output_schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs",
												"output_schema"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						},
						{
							"name": "Return the config schema of the runnable.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/runs/config_schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"runs",
										"config_schema"
									]
								},
								"description": "Return the config schema of the runnable."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs/config_schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs",
												"config_schema"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								}
							]
						},
						{
							"name": "Generate a title to name the thread.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"thread_id\": \"<string>\",\n  \"history\": [\n    {\n      \"content\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"content\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/runs/title",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"runs",
										"title"
									]
								},
								"description": "Generates a title for the conversation by sending a list of interactions to the model."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"thread_id\": \"<string>\",\n  \"history\": [\n    {\n      \"content\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"content\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs/title",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs",
												"title"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"assistant_id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"thread_id\": \"<string>\",\n  \"history\": [\n    {\n      \"content\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"content\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/runs/title",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"runs",
												"title"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "threads",
					"item": [
						{
							"name": "{thread_id}",
							"item": [
								{
									"name": "state",
									"item": [
										{
											"name": "Retrieve thread state",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id/state",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id",
														"state"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Retrieves the state of a thread identified by its ID."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/threads/:thread_id/state",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"threads",
																":thread_id",
																"state"
															],
															"variable": [
																{
																	"key": "thread_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/threads/:thread_id/state",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"threads",
																":thread_id",
																"state"
															],
															"variable": [
																{
																	"key": "thread_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add thread state",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"value\": \"<Error: Schema not found>\"\n    },\n    {\n      \"value\": \"<Error: Schema not found>\"\n    }\n  ],\n  \"config\": \"<object>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id/state",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id",
														"state"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Adds the state of a thread identified by its ID."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": [\n    {\n      \"value\": \"<Error: Schema not found>\"\n    },\n    {\n      \"value\": \"<Error: Schema not found>\"\n    }\n  ],\n  \"config\": \"<object>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/threads/:thread_id/state",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"threads",
																":thread_id",
																"state"
															],
															"variable": [
																{
																	"key": "thread_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": [\n    {\n      \"value\": \"<Error: Schema not found>\"\n    },\n    {\n      \"value\": \"<Error: Schema not found>\"\n    }\n  ],\n  \"config\": \"<object>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/threads/:thread_id/state",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"threads",
																":thread_id",
																"state"
															],
															"variable": [
																{
																	"key": "thread_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a specific thread",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"threads",
												":thread_id"
											],
											"variable": [
												{
													"key": "thread_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Retrieves detailed information about a thread identified by its ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"assistant_id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a specific thread",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"assistant_id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"threads",
												":thread_id"
											],
											"variable": [
												{
													"key": "thread_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Updates the information of a thread identified by its ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"assistant_id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"assistant_id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"assistant_id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a specific thread",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"threads",
												":thread_id"
											],
											"variable": [
												{
													"key": "thread_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Deletes a thread identified by its ID from the database."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get thread history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/threads/:thread_id/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"threads",
												":thread_id",
												"history"
											],
											"variable": [
												{
													"key": "thread_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Gets the history of the thread identified by its ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id",
														"history"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/threads/:thread_id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"threads",
														":thread_id",
														"history"
													],
													"variable": [
														{
															"key": "thread_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create a new thread",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assistant_id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/threads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"threads"
									]
								},
								"description": "Creates a new thread with the provided information. This can optionally be obtained from the api_key. If it is not set in the request, it will attempt to get it from the api_key."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"assistant_id\": \"<uuid>\",\n  \"user_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/threads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"threads"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"assistant_id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"assistant_id\": \"<uuid>\",\n  \"user_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/threads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"threads"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "assistants",
					"item": [
						{
							"name": "{assistant_id}",
							"item": [
								{
									"name": "files",
									"item": [
										{
											"name": "Add an uploaded file to an assistant for RAG.",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.sendRequest({",
															"    url: pm.environment.get(\"baseUrl\") + \"/api/v1/assistants\",",
															"    method: 'POST',",
															"    header: {",
															"        'X-API-KEY': pm.environment.get(\"apiKey\"),",
															"        'Content-Type': 'application/json'",
															"    },",
															"    body: {",
															"        mode: 'raw',",
															"        raw: JSON.stringify({",
															"  \"name\": \"Weather assistant\",",
															"  \"config\": {",
															"            \"configurable\": {",
															"                \"type\": \"chatbot\",",
															"                \"agent_type\": \"GPT 3.5 Turbo\",",
															"                \"system_message\": \"You are a helpful weather assistant.\",",
															"                \"tools\": [\"DDG Search\"],",
															"                \"llm_type\": \"GPT 3.5 Turbo\"",
															"            }",
															"        },",
															"  \"kwargs\": {",
															"            \"description\": \"An assistant for weather-related queries\"",
															"        },",
															"  \"public\": false",
															"})",
															"    }",
															"}, function (err, res) {",
															"    if (err) {",
															"        console.log(err);",
															"    } else {",
															"        const response = res.json();",
															"        pm.environment.set(\"assistantId\", response.id);",
															"    }",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"file_id\": \"1e538b9d-ef2d-47d4-ad16-5d76080f3e7c\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/{{assistantId}}/files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														"{{assistantId}}",
														"files"
													]
												},
												"description": "Convenience method to add an uploaded file to an assistant for RAG ingestion and retrieval"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-API-KEY",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"file_id\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"assistants",
																":assistant_id",
																"files"
															],
															"variable": [
																{
																	"key": "assistant_id",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"file_id\": \"<string>\",\n  \"assistant_id\": \"<string>\"\n}"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-API-KEY",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"file_id\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"assistants",
																":assistant_id",
																"files"
															],
															"variable": [
																{
																	"key": "assistant_id",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Retrieve file information for all files associated with an assistant",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Response has valid JSON structure\", function () {",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.variables.set(\"assistantId\", \"36395fdd-b0e3-4d4f-b9e4-38737cc6cccd\")"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/{{assistantId}}/files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														"{{assistantId}}",
														"files"
													]
												},
												"description": "Returns a list of file objects for all files associated with an assistant."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-API-KEY",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id/files?limit=20&order=desc&before=<dateTime>&after=<dateTime>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"assistants",
																":assistant_id",
																"files"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20"
																},
																{
																	"key": "order",
																	"value": "desc"
																},
																{
																	"key": "before",
																	"value": "<dateTime>"
																},
																{
																	"key": "after",
																	"value": "<dateTime>"
																}
															],
															"variable": [
																{
																	"key": "assistant_id",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"purpose\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"bytes\": \"<integer>\",\n    \"mime_type\": \"<string>\",\n    \"source\": \"<string>\",\n    \"kwargs\": \"<object>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"purpose\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"bytes\": \"<integer>\",\n    \"mime_type\": \"<string>\",\n    \"source\": \"<string>\",\n    \"kwargs\": \"<object>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n]"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-API-KEY",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id/files?limit=20&order=desc&before=<dateTime>&after=<dateTime>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"assistants",
																":assistant_id",
																"files"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20"
																},
																{
																	"key": "order",
																	"value": "desc"
																},
																{
																	"key": "before",
																	"value": "<dateTime>"
																},
																{
																	"key": "after",
																	"value": "<dateTime>"
																}
															],
															"variable": [
																{
																	"key": "assistant_id",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove a file from an assistant",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.variables.set(\"assistantId\", \"36395fdd-b0e3-4d4f-b9e4-38737cc6cccd\")",
															"pm.variables.set(\"fileId\", \"1e538b9d-ef2d-47d4-ad16-5d76080f3e7c\")"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/{{assistantId}}/files/{{fileId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														"{{assistantId}}",
														"files",
														"{{fileId}}"
													]
												},
												"description": "Removes a file from an assistant by its ID. This also deletes the corresponding documents from the vector store."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-API-KEY",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id/files/:file_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"assistants",
																":assistant_id",
																"files",
																":file_id"
															],
															"variable": [
																{
																	"key": "assistant_id",
																	"value": "<uuid>",
																	"description": "(Required) "
																},
																{
																	"key": "file_id",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"config\": {\n    \"configurable\": {\n      \"type\": \"agent\",\n      \"agent_type\": \"GPT 3.5 Turbo\",\n      \"interrupt_before_action\": \"<boolean>\",\n      \"retrieval_description\": \"<string>\",\n      \"system_message\": \"<string>\",\n      \"tools\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"llm_type\": \"<string>\"\n    }\n  },\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"user_id\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"file_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"public\": \"<boolean>\"\n}"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-API-KEY",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id/files/:file_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"assistants",
																":assistant_id",
																"files",
																":file_id"
															],
															"variable": [
																{
																	"key": "assistant_id",
																	"value": "<uuid>",
																	"description": "(Required) "
																},
																{
																	"key": "file_id",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a specific assistant",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v1/assistants\",",
													"    method: 'POST',",
													"    header: {",
													"        'X-API-KEY': pm.environment.get(\"apiKey\"),",
													"        'Content-Type': 'application/json'",
													"    },",
													"    body: {",
													"        mode: 'raw',",
													"        raw: JSON.stringify({",
													"  \"name\": \"Weather assistant\",",
													"  \"config\": {",
													"            \"configurable\": {",
													"                \"type\": \"chatbot\",",
													"                \"agent_type\": \"GPT 3.5 Turbo\",",
													"                \"system_message\": \"You are a helpful weather assistant.\",",
													"                \"tools\": [\"DDG Search\"],",
													"                \"llm_type\": \"GPT 3.5 Turbo\"",
													"            }",
													"        },",
													"  \"user_id\": \"asdf\",",
													"  \"kwargs\": {",
													"            \"description\": \"An assistant for weather-related queries\"",
													"        },",
													"  \"public\": false",
													"})",
													"    }",
													"}, function (err, res) {",
													"    if (err) {",
													"        console.log(err);",
													"    } else {",
													"        const response = res.json();",
													"        pm.environment.set(\"assistantId\", response.id);",
													"    }",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response has valid JSON structure\", function () {",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/assistants/{{assistantId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"assistants",
												"{{assistantId}}"
											]
										},
										"description": "Retrieves detailed information about a specific assistant by its ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														":assistant_id"
													],
													"variable": [
														{
															"key": "assistant_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"config\": {\n    \"configurable\": {\n      \"type\": \"agent\",\n      \"agent_type\": \"GPT 3.5 Turbo\",\n      \"interrupt_before_action\": \"<boolean>\",\n      \"retrieval_description\": \"<string>\",\n      \"system_message\": \"<string>\",\n      \"tools\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"llm_type\": \"<string>\"\n    }\n  },\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"user_id\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"file_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"public\": \"<boolean>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														":assistant_id"
													],
													"variable": [
														{
															"key": "assistant_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a specific assistant",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v1/assistants\",",
													"    method: 'POST',",
													"    header: {",
													"        'X-API-KEY': pm.environment.get(\"apiKey\"),",
													"        'Content-Type': 'application/json'",
													"    },",
													"    body: {",
													"        mode: 'raw',",
													"        raw: JSON.stringify({",
													"  \"name\": \"Weather assistant\",",
													"  \"config\": {",
													"            \"configurable\": {",
													"                \"type\": \"chatbot\",",
													"                \"agent_type\": \"GPT 3.5 Turbo\",",
													"                \"system_message\": \"You are a helpful weather assistant.\",",
													"                \"tools\": [\"DDG Search\"],",
													"                \"llm_type\": \"GPT 3.5 Turbo\"",
													"            }",
													"        },",
													"  \"user_id\": \"asdf\",",
													"  \"kwargs\": {",
													"            \"description\": \"An assistant for weather-related queries\"",
													"        },",
													"  \"public\": false",
													"})",
													"    }",
													"}, function (err, res) {",
													"    if (err) {",
													"        console.log(err);",
													"    } else {",
													"        const response = res.json();",
													"        pm.environment.set(\"assistantId\", response.id);",
													"    }",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response has valid JSON structure\", function () {",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Weather assistant updated\",\n  \"config\": {\n            \"configurable\": {\n                \"type\": \"chatbot\",\n                \"agent_type\": \"GPT 3.5 Turbo\",\n                \"system_message\": \"You are a helpful weather assistant.\",\n                \"tools\": [\"DDG Search\"],\n                \"llm_type\": \"GPT 3.5 Turbo\"\n            }\n        },\n  \"user_id\": \"asdf\",\n  \"kwargs\": {\n            \"description\": \"An assistant for weather-related queries\"\n        },\n  \"public\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/assistants/{{assistantId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"assistants",
												"{{assistantId}}"
											]
										},
										"description": "Updates the details of a specific assistant by its ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"config\": \"<object>\",\n  \"kwargs\": \"<object>\",\n  \"file_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"public\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														":assistant_id"
													],
													"variable": [
														{
															"key": "assistant_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"config\": {\n    \"configurable\": {\n      \"type\": \"agent\",\n      \"agent_type\": \"GPT 3.5 Turbo\",\n      \"interrupt_before_action\": \"<boolean>\",\n      \"retrieval_description\": \"<string>\",\n      \"system_message\": \"<string>\",\n      \"tools\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"llm_type\": \"<string>\"\n    }\n  },\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"user_id\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"file_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"public\": \"<boolean>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"config\": \"<object>\",\n  \"kwargs\": \"<object>\",\n  \"file_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"public\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														":assistant_id"
													],
													"variable": [
														{
															"key": "assistant_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a specific assistant",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"assistantId\", \"cd2a7145-6f36-4456-8fa9-e81be98a2409\")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/assistants/{{assistantId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"assistants",
												"{{assistantId}}"
											]
										},
										"description": "Deletes a specific assistant by its ID from the database."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														":assistant_id"
													],
													"variable": [
														{
															"key": "assistant_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/assistants/:assistant_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"assistants",
														":assistant_id"
													],
													"variable": [
														{
															"key": "assistant_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve all assistants",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has valid JSON structure\", function () {",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"assistants"
									]
								},
								"description": "Retrieves a list of all assistants."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/assistants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"assistants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"configurable\": {\n        \"type\": \"agent\",\n        \"agent_type\": \"GPT 3.5 Turbo\",\n        \"interrupt_before_action\": \"<boolean>\",\n        \"retrieval_description\": \"<string>\",\n        \"system_message\": \"<string>\",\n        \"tools\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"llm_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user_id\": \"<string>\",\n    \"kwargs\": \"<object>\",\n    \"file_ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"public\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"configurable\": {\n        \"type\": \"agent\",\n        \"agent_type\": \"GPT 3.5 Turbo\",\n        \"interrupt_before_action\": \"<boolean>\",\n        \"retrieval_description\": \"<string>\",\n        \"system_message\": \"<string>\",\n        \"tools\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"llm_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user_id\": \"<string>\",\n    \"kwargs\": \"<object>\",\n    \"file_ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"public\": \"<boolean>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create a new assistant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Response has valid JSON structure\", function () {",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Weather assistant\",\n  \"config\": {\n            \"configurable\": {\n                \"type\": \"chatbot\",\n                \"agent_type\": \"GPT 3.5 Turbo\",\n                \"system_message\": \"You are a helpful weather assistant.\",\n                \"tools\": [\"DDG Search\"],\n                \"llm_type\": \"GPT 3.5 Turbo\"\n            }\n        },\n  \"kwargs\": {\n            \"description\": \"An assistant for weather-related queries\"\n        },\n  \"public\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/assistants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"assistants"
									]
								},
								"description": "Creates a new assistant with the specified details."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"config\": \"<object>\",\n  \"user_id\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"file_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"public\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/assistants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"assistants"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"config\": {\n    \"configurable\": {\n      \"type\": \"agent\",\n      \"agent_type\": \"GPT 3.5 Turbo\",\n      \"interrupt_before_action\": \"<boolean>\",\n      \"retrieval_description\": \"<string>\",\n      \"system_message\": \"<string>\",\n      \"tools\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"llm_type\": \"<string>\"\n    }\n  },\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"user_id\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"file_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"public\": \"<boolean>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"config\": \"<object>\",\n  \"user_id\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"file_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"public\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/assistants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"assistants"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "rag",
					"item": [
						{
							"name": "Ingest files to be indexed and queried.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"files\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"purpose\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"document_processor\": {\n    \"summarize\": false,\n    \"encoder\": {\n      \"provider\": \"openai\",\n      \"encoder_model\": \"text-embedding-3-small\",\n      \"dimensions\": 1536,\n      \"score_threshold\": 0.75\n    },\n    \"unstructured\": {\n      \"partition_strategy\": \"auto\",\n      \"hi_res_model_name\": \"detectron2_onnx\",\n      \"process_tables\": false\n    },\n    \"splitter\": {\n      \"name\": \"semantic\",\n      \"min_tokens\": 30,\n      \"max_tokens\": 280,\n      \"rolling_window_size\": 1,\n      \"prefix_titles\": true,\n      \"prefix_summary\": true\n    },\n    \"parser_config\": {\n        \"structured_data_content_field\": \"page_content\"\n    }\n  },\n  \"webhook_url\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rag/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rag",
										"ingest"
									]
								},
								"description": "Upload files for ingesting using the advanced RAG system."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"files\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"purpose\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"document_processor\": {\n    \"summarize\": false,\n    \"encoder\": {\n      \"provider\": \"openai\",\n      \"encoder_model\": \"text-embedding-3-small\",\n      \"dimensions\": 1536\n    },\n    \"unstructured\": {\n      \"partition_strategy\": \"auto\",\n      \"hi_res_model_name\": \"detectron2_onnx\",\n      \"process_tables\": false\n    },\n    \"splitter\": {\n      \"name\": \"semantic\",\n      \"min_tokens\": 30,\n      \"max_tokens\": 800,\n      \"rolling_window_size\": 1,\n      \"prefix_titles\": true,\n      \"prefix_summary\": true\n    }\n  },\n  \"webhook_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rag/ingest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rag",
												"ingest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"<object>\""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"files\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"purpose\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"document_processor\": {\n    \"summarize\": false,\n    \"encoder\": {\n      \"provider\": \"openai\",\n      \"encoder_model\": \"text-embedding-3-small\",\n      \"dimensions\": 1536\n    },\n    \"unstructured\": {\n      \"partition_strategy\": \"auto\",\n      \"hi_res_model_name\": \"detectron2_onnx\",\n      \"process_tables\": false\n    },\n    \"splitter\": {\n      \"name\": \"semantic\",\n      \"min_tokens\": 30,\n      \"max_tokens\": 800,\n      \"rolling_window_size\": 1,\n      \"prefix_titles\": true,\n      \"prefix_summary\": true\n    }\n  },\n  \"webhook_url\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rag/ingest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rag",
												"ingest"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Query documents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"context\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"encoder\": {\n    \"provider\": \"openai\",\n    \"encoder_model\": \"text-embedding-3-small\",\n    \"dimensions\": 1536\n  },\n  \"enable_rerank\": \"<boolean>\",\n  \"interpreter_mode\": \"<boolean>\",\n  \"exclude_fields\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rag/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rag",
										"query"
									]
								},
								"description": "Query ingested documents using advanced RAG system with unstructured library. <br>"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"context\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"encoder\": {\n    \"provider\": \"openai\",\n    \"encoder_model\": \"text-embedding-3-small\",\n    \"dimensions\": 1536\n  },\n  \"enable_rerank\": \"<boolean>\",\n  \"interpreter_mode\": \"<boolean>\",\n  \"exclude_fields\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rag/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rag",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"document_id\": \"<string>\",\n      \"page_content\": \"<string>\",\n      \"file_id\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"source\": \"<string>\",\n      \"source_type\": \"<string>\",\n      \"chunk_index\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"token_count\": \"<integer>\",\n      \"page_number\": \"<integer>\",\n      \"metadata\": \"<object>\",\n      \"dense_embedding\": [\n        \"<number>\",\n        \"<number>\"\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"document_id\": \"<string>\",\n      \"page_content\": \"<string>\",\n      \"file_id\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"source\": \"<string>\",\n      \"source_type\": \"<string>\",\n      \"chunk_index\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"token_count\": \"<integer>\",\n      \"page_number\": \"<integer>\",\n      \"metadata\": \"<object>\",\n      \"dense_embedding\": [\n        \"<number>\",\n        \"<number>\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"context\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"encoder\": {\n    \"provider\": \"openai\",\n    \"encoder_model\": \"text-embedding-3-small\",\n    \"dimensions\": 1536\n  },\n  \"enable_rerank\": \"<boolean>\",\n  \"interpreter_mode\": \"<boolean>\",\n  \"exclude_fields\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rag/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rag",
												"query"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Query Lc Retriever",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "X-API-KEY",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"context\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"encoder\": {\n    \"provider\": \"openai\",\n    \"encoder_model\": \"text-embedding-3-small\",\n    \"dimensions\": 1536\n  },\n  \"enable_rerank\": \"<boolean>\",\n  \"interpreter_mode\": \"<boolean>\",\n  \"exclude_fields\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rag/query-lc-retriever",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rag",
										"query-lc-retriever"
									]
								}
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"context\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"encoder\": {\n    \"provider\": \"openai\",\n    \"encoder_model\": \"text-embedding-3-small\",\n    \"dimensions\": 1536\n  },\n  \"enable_rerank\": \"<boolean>\",\n  \"interpreter_mode\": \"<boolean>\",\n  \"exclude_fields\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rag/query-lc-retriever",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rag",
												"query-lc-retriever"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"context\": \"<string>\",\n  \"index_name\": \"<string>\",\n  \"vector_database\": {\n    \"type\": \"qdrant\",\n    \"config\": \"<object>\"\n  },\n  \"encoder\": {\n    \"provider\": \"openai\",\n    \"encoder_model\": \"text-embedding-3-small\",\n    \"dimensions\": 1536\n  },\n  \"enable_rerank\": \"<boolean>\",\n  \"interpreter_mode\": \"<boolean>\",\n  \"exclude_fields\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rag/query-lc-retriever",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rag",
												"query-lc-retriever"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "files",
					"item": [
						{
							"name": "{file_id}",
							"item": [
								{
									"name": "Retrieve file information",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"fileId\", \"1e538b9d-ef2d-47d4-ad16-5d76080f3e7c\")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response has valid JSON structure\", function () {",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/files/{{fileId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"files",
												"{{fileId}}"
											]
										},
										"description": "Retrieves information about a specific file by its ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/files/:file_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"files",
														":file_id"
													],
													"variable": [
														{
															"key": "file_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"user_id\": \"<string>\",\n  \"purpose\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"bytes\": \"<integer>\",\n  \"mime_type\": \"<string>\",\n  \"source\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/files/:file_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"files",
														":file_id"
													],
													"variable": [
														{
															"key": "file_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a specific file",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/files/:file_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"files",
												":file_id"
											],
											"variable": [
												{
													"key": "file_id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										},
										"description": "Deletes a specific file by its ID from the database and file system. When a file is deleted, it is also removed from any assistants that may be using it and all associated embeddings are deleted from the vector store."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/files/:file_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"files",
														":file_id"
													],
													"variable": [
														{
															"key": "file_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"file_id\": \"<uuid>\",\n  \"num_of_assistants\": \"<integer>\",\n  \"assistants\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"num_of_deleted_chunks\": \"<integer>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/files/:file_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"files",
														":file_id"
													],
													"variable": [
														{
															"key": "file_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve the content of a specific file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"fileId\", \"1e538b9d-ef2d-47d4-ad16-5d76080f3e7c\")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/files/{{fileId}}/content",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"files",
												"{{fileId}}",
												"content"
											]
										},
										"description": "Retrieves the content of a specific file by its ID. Returns a downloadable file."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/files/:file_id/content",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"files",
														":file_id",
														"content"
													],
													"variable": [
														{
															"key": "file_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-API-KEY",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/files/:file_id/content",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"files",
														":file_id",
														"content"
													],
													"variable": [
														{
															"key": "file_id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Upload a file",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');",
											"",
											"pm.variables.set('file_name', uuid.v4());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Response has valid JSON structure\", function () {",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) The file to upload.",
											"type": "file",
											"src": "postman-cloud:///1ef379dd-c051-4b10-98ce-f78ec7887dbe"
										},
										{
											"key": "purpose",
											"value": "assistants",
											"description": "(Required) The purpose of the file: 'assistants', 'threads', or 'personas'.",
											"type": "text"
										},
										{
											"key": "kwargs",
											"value": "{}",
											"description": "Any additonal metadata to include for this file. This should be a JSON string.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"files"
									]
								},
								"description": "Uploads a file that can be used across various endpoints. <br> NOTE: MUST INCLUDE `user_id`"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": "(Required) The file to upload.",
													"type": "text"
												},
												{
													"key": "purpose",
													"value": "<string>",
													"description": "(Required) The purpose of the file: 'assistants', 'threads', or 'personas'.",
													"type": "text"
												},
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) The user id of the file owner.",
													"type": "text"
												},
												{
													"key": "filename",
													"value": "<string>",
													"description": "The preferred name for the file.",
													"type": "text"
												},
												{
													"key": "kwargs",
													"value": "<string>",
													"description": "Any additonal metadata to include for this file. This should be a JSON string.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"files"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"user_id\": \"<string>\",\n  \"purpose\": \"<string>\",\n  \"filename\": \"<string>\",\n  \"bytes\": \"<integer>\",\n  \"mime_type\": \"<string>\",\n  \"source\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": "(Required) The file to upload.",
													"type": "text"
												},
												{
													"key": "purpose",
													"value": "<string>",
													"description": "(Required) The purpose of the file: 'assistants', 'threads', or 'personas'.",
													"type": "text"
												},
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) The user id of the file owner.",
													"type": "text"
												},
												{
													"key": "filename",
													"value": "<string>",
													"description": "The preferred name for the file.",
													"type": "text"
												},
												{
													"key": "kwargs",
													"value": "<string>",
													"description": "Any additonal metadata to include for this file. This should be a JSON string.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"files"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Retrieve files",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has valid JSON structure\", function () {",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/files?user_id={{userId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"files"
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{userId}}"
										}
									]
								},
								"description": "Retrieves a list of files."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/files?user_id=<string>&purpose=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"files"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "purpose",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"purpose\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"bytes\": \"<integer>\",\n    \"mime_type\": \"<string>\",\n    \"source\": \"<string>\",\n    \"kwargs\": \"<object>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"purpose\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"bytes\": \"<integer>\",\n    \"mime_type\": \"<string>\",\n    \"source\": \"<string>\",\n    \"kwargs\": \"<object>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  }\n]"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-API-KEY",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/files?user_id=<string>&purpose=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"files"
											],
											"query": [
												{
													"key": "user_id",
													"value": "<string>"
												},
												{
													"key": "purpose",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "Get enabled authentication strategies",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/auth_strategies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"auth_strategies"
									]
								},
								"description": "Returns a list of enabled authentication strategies."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/auth_strategies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"auth_strategies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"strategy\": \"<string>\",\n    \"client_id\": \"<string>\",\n    \"authorization_endpoint\": \"<string>\",\n    \"pkce_enabled\": \"<boolean>\"\n  },\n  {\n    \"strategy\": \"<string>\",\n    \"client_id\": \"<string>\",\n    \"authorization_endpoint\": \"<string>\",\n    \"pkce_enabled\": \"<boolean>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Login",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"strategy\": \"<string>\",\n  \"payload\": {\n    \"qui_d7e\": \"<string>\",\n    \"mollit4a1\": \"<string>\",\n    \"reprehenderit9_2\": \"<string>\",\n    \"est_8c\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"login"
									]
								},
								"description": "Logs user in, performing auth according to auth strategy."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"strategy\": \"<string>\",\n  \"payload\": {\n    \"qui_d7e\": \"<string>\",\n    \"mollit4a1\": \"<string>\",\n    \"reprehenderit9_2\": \"<string>\",\n    \"est_8c\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"strategy\": \"<string>\",\n  \"payload\": {\n    \"qui_d7e\": \"<string>\",\n    \"mollit4a1\": \"<string>\",\n    \"reprehenderit9_2\": \"<string>\",\n    \"est_8c\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"login"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Authorize",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/:strategy/auth?code=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										":strategy",
										"auth"
									],
									"query": [
										{
											"key": "code",
											"value": "<string>",
											"description": "Code returned from OAuth provider for OIDC token exchange"
										}
									],
									"variable": [
										{
											"key": "strategy",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Callback authorization endpoint used for OAuth providers after authenticating on the provider's login screen."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/:strategy/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												":strategy",
												"auth"
											],
											"variable": [
												{
													"key": "strategy",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/:strategy/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												":strategy",
												"auth"
											],
											"variable": [
												{
													"key": "strategy",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Logout",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"logout"
									]
								},
								"description": "Logs user out, adding the given JWT token to the blacklist."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/auth/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "admin/users",
					"item": [
						{
							"name": "{user_id}",
							"item": [
								{
									"name": "Retrieve a specific user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response has valid JSON structure\", function () {",
													"    pm.response.to.be.json;",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson).to.have.property('user_id');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "GET endpoint at `/users/{user_id}` for fetching details of a specific user using its user_id.\n        USAGE: Admins can use this endpoint to retrieve details of a specific user.\n        TODO: Add access control for this endpoint."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a specific user ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response has valid JSON structure\", function () {",
													"    pm.response.to.be.json;",
													"    const responseJson = pm.response.json();",
													"    pm.expect(responseJson).to.have.property('user_id');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"hashed_password\": \"<binary>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "PATCH endpoint at `/{user_id}` for updating the details of a specific user.\n        USAGE: Admins can use this endpoint to update the details of a specific user.\n        TODO: Add access control for this endpoint."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"hashed_password\": \"<binary>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"hashed_password\": \"<binary>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve user assistants",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users/:user_id/assistants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												":user_id",
												"assistants"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<string>",
													"description": "Required"
												}
											]
										},
										"description": "Retrieves a list of the user's assistants."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/assistants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														"assistants"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"configurable\": {\n        \"type\": \"agent\",\n        \"agent_type\": \"GPT 3.5 Turbo\",\n        \"interrupt_before_action\": \"<boolean>\",\n        \"retrieval_description\": \"<string>\",\n        \"system_message\": \"<string>\",\n        \"tools\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"llm_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user_id\": \"<string>\",\n    \"kwargs\": \"<object>\",\n    \"file_ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"public\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"config\": {\n      \"configurable\": {\n        \"type\": \"agent\",\n        \"agent_type\": \"GPT 3.5 Turbo\",\n        \"interrupt_before_action\": \"<boolean>\",\n        \"retrieval_description\": \"<string>\",\n        \"system_message\": \"<string>\",\n        \"tools\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ],\n        \"llm_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user_id\": \"<string>\",\n    \"kwargs\": \"<object>\",\n    \"file_ids\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"public\": \"<boolean>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Delete a specific user ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(204);",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "DELETE endpoint at `/users/{user_id}` for removing a specific user using its `user_id`.\n                USAGE: Admins can use this endpoint to delete a specific user.\n                TODO: Add access control for this endpoint."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve threads by user ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response has valid JSON structure\", function () {",
													"    pm.response.to.be.json;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users/:user_id/threads?grouped=<boolean>&timezoneOffset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												":user_id",
												"threads"
											],
											"query": [
												{
													"key": "grouped",
													"value": "<boolean>"
												},
												{
													"key": "timezoneOffset",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "GET endpoint at `/users/{user_id}/threads` for fetching all threads associated with a specific user using its id. <br>\n                USAGE: Admins can use this endpoint to retrieve all threads associated with a specific user.\n                TODO: Add access control for this endpoint."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:user_id/threads?grouped=<boolean>&timezoneOffset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":user_id",
														"threads"
													],
													"query": [
														{
															"key": "grouped",
															"value": "<boolean>"
														},
														{
															"key": "timezoneOffset",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"assistant_id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"kwargs\": \"<object>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"assistant_id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"kwargs\": \"<object>\"\n  }\n]"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/admin/users/:user_id/threads?grouped=<boolean>&timezoneOffset=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"admin",
														"users",
														":user_id",
														"threads"
													],
													"query": [
														{
															"key": "grouped",
															"value": "<boolean>"
														},
														{
															"key": "timezoneOffset",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List all users ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has valid JSON structure\", function () {",
											"    pm.response.to.be.json;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"users"
									]
								},
								"description": "GET endpoint at `/users` for listing all users.\n                TODO: Add access control for this endpoint."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"kwargs\": \"<object>\"\n  },\n  {\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"kwargs\": \"<object>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create a new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has valid JSON structure\", function () {",
											"    pm.response.to.be.json;",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson).to.have.property('user_id');",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"user_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"users"
									]
								},
								"description": "POST endpoint at `/users` for creating a new user.\n                If `user_id` is not present, the database will auto-generate a new UUID for the field.\n                This is intended to allow for internal users to be correlated with external systems while not exposing the internal database record id for the user.\n                TODO: Add access control for this endpoint."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"hashed_password\": \"<binary>\",\n  \"user_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"hashed_password\": \"<binary>\",\n  \"user_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Retrieve all threads",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/admin/users/threads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"users",
										"threads"
									]
								},
								"description": "Retrieves a list of all threads in the database.\n                Should be used as an admin operation. <br>\n                TODO: Add access control for this endpoint."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/admin/users/threads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users",
												"threads"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"assistant_id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"kwargs\": \"<object>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"assistant_id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"kwargs\": \"<object>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "users/me",
					"item": [
						{
							"name": "Retrieve a specific user ",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me"
									]
								},
								"description": "GET endpoint to fetch details of the logged-in user.\n        USAGE: Admins can use this endpoint to retrieve details of a specific user.\n        TODO: Add RBAC for this endpoint."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
								}
							]
						},
						{
							"name": "Delete a specific user ",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me"
									]
								},
								"description": "DELETE endpoint for removing the logged-in user from the system.\n                This will do a cascade delete on all threads and messages, but will not\n                effect assistants created by the user."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"me"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a specific user ",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"hashed_password\": \"<binary>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me"
									]
								},
								"description": "PATCH endpoint for updating the details of the logged-in user."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"hashed_password\": \"<binary>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"user_id\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"kwargs\": \"<object>\",\n  \"password\": \"<string>\",\n  \"hashed_password\": \"<binary>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"me"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Retrieve threads by user ",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/me/threads?grouped=<boolean>&timezoneOffset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me",
										"threads"
									],
									"query": [
										{
											"key": "grouped",
											"value": "<boolean>",
											"description": "Group threads into date categories (eg. Today, Yesterday, etc.)"
										},
										{
											"key": "timezoneOffset",
											"value": "<integer>",
											"description": "Timezone offset in minutes from UTC"
										}
									]
								},
								"description": "GET endpoint for fetching all threads associated with the logged-in user."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/me/threads?grouped=<boolean>&timezoneOffset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"me",
												"threads"
											],
											"query": [
												{
													"key": "grouped",
													"value": "<boolean>"
												},
												{
													"key": "timezoneOffset",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"assistant_id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"kwargs\": \"<object>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"user_id\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"assistant_id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"kwargs\": \"<object>\"\n  }\n]"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/me/threads?grouped=<boolean>&timezoneOffset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"me",
												"threads"
											],
											"query": [
												{
													"key": "grouped",
													"value": "<boolean>"
												},
												{
													"key": "timezoneOffset",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/health_check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"health_check"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/health_check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"health_check"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9000",
			"type": "string"
		}
	]
}